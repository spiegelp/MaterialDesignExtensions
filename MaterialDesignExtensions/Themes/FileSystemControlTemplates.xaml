<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"
                    xmlns:controls="clr-namespace:MaterialDesignExtensions.Controls"
                    xmlns:controllers="clr-namespace:MaterialDesignExtensions.Controllers"
                    xmlns:converters="clr-namespace:MaterialDesignExtensions.Converters"
                    xmlns:internalCommands="clr-namespace:MaterialDesignExtensions.Commands.Internal"
                    xmlns:localization="clr-namespace:MaterialDesignExtensions.Localization"
                    xmlns:templateSelectors="clr-namespace:MaterialDesignExtensions.TemplateSelectors">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Shadows.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ComboBox.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.TextBox.xaml" />
        <ResourceDictionary>
            <md:BrushRoundConverter x:Key="brushRoundConverter"/>
        </ResourceDictionary>
    </ResourceDictionary.MergedDictionaries>
    
    <converters:DateTimeAgoConverter x:Key="dateTimeAgoConverter" />
    <converters:UpperCaseConverter x:Key="upperCaseConverter" />
    <!--<converters:FileSystemInfoIconConverter x:Key="fileSystemInfoIconConverterImageModeIcon" ImageMode="Icon" />-->
    <converters:FileSystemInfoIconConverter x:Key="fileSystemInfoIconConverterThumbnail" ImageMode="AsyncImageTask" ImageTargetHeight="40" ImageTargetWidth="40" UseCache="True" />
    <converters:FileSystemInfoPackIconColorConverter x:Key="fileSystemInfoPackIconColorConverter" />
    <converters:FileSystemInfoIconConverter x:Key="fileSystemInfoIconConverterInfoImagePreview" ImageMode="AsyncImageTask" ImageTargetWidth="256" ImageTargetHeight="144" UseCache="True" />
    <converters:FileSizeConverter x:Key="fileSizeConverter" />
    <converters:NotNullBooleanConverter x:Key="notNullBooleanConverter" />
    <converters:ObjectToTypeStringConverter x:Key="objectToTypeStringConverter" />
    <converters:ObjectHasTypeConverter x:Key="objectHasTypeConverter" />
    <converters:BoolToVisibilityConverter x:Key="trueToVisibleConverter" FalseValue="Collapsed" TrueValue="Visible" />
    <converters:BoolToVisibilityConverter x:Key="falseToVisibleConverter" FalseValue="Visible" TrueValue="Collapsed" />

    <templateSelectors:FileSystemEntryInfoTemplateSelector x:Key="fileSystemEntryInfoTemplateSelector" />
    <templateSelectors:FileSystemEntryItemTemplateSelector x:Key="fileSystemEntryItemTemplateSelector" ForMultipleSelection="False" />
    <templateSelectors:FileSystemEntryItemTemplateSelector x:Key="fileSystemEntryItemMultipleTemplateSelector" ForMultipleSelection="True" />
    <templateSelectors:FileSystemEntryItemIconTemplateSelector x:Key="fileSystemEntryItemIconTemplateSelector" />
    <templateSelectors:FileSystemInfoIconTemplateSelector x:Key="fileSystemInfoIconTemplateSelector" />

    <Style x:Key="fileSystemEntryInfoNameStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="16" />
        <Setter Property="FontWeight" Value="Medium" />
        <Setter Property="Margin" Value="0,16,0,2" />
        <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}" />
    </Style>

    <Style x:Key="fileSystemEntryInfoDetailHeaderStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Margin" Value="0,12,0,0" />
        <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBodyLight}" />
    </Style>

    <Style x:Key="fileSystemEntryInfoDetailStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Margin" Value="0,4,0,0" />
        <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}" />
    </Style>

    <Style x:Key="closeToggleButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="ToolTip" Value="{x:Static localization:Strings.Close}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Background="Transparent">
                        <md:PackIcon Kind="ArrowLeft" Height="24" Width="24" Foreground="{TemplateBinding Foreground}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <DataTemplate x:Key="specialDriveItemTemplate">
        <Grid x:Name="specialDriveItemGrid" HorizontalAlignment="Stretch">
            <Border Background="{Binding Path=Foreground, Converter={StaticResource brushRoundConverter}, ElementName=specialDriveItemButton}"
                    HorizontalAlignment="Stretch">
                <Border.Style>
                    <Style TargetType="{x:Type Border}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=IsMouseOver, ElementName=specialDriveItemGrid}" Value="True">
                                <Setter Property="Opacity" Value="0.1" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=IsMouseOver, ElementName=specialDriveItemGrid}" Value="False">
                                <Setter Property="Opacity" Value="0" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
            </Border>
            <Button x:Name="specialDriveItemButton" Style="{DynamicResource MaterialDesignToolForegroundButton}"
                    Command="{x:Static internalCommands:FileSystemControlCommands.SelectDirectoryItemCommand}" CommandParameter="{Binding}"
                    Height="36" HorizontalContentAlignment="Left" VerticalContentAlignment="Center">
                <DockPanel>
                    <md:PackIcon DockPanel.Dock="Left" Kind="{Binding Path=Icon, Mode=OneTime}" Height="24" Width="24" VerticalAlignment="Center" />
                    <TextBlock Text="{Binding Path=Label, Mode=OneTime}" VerticalAlignment="Center" Margin="16,0,0,0" />
                </DockPanel>
            </Button>
        </Grid>
    </DataTemplate>
    
    <DataTemplate x:Key="specialDrivesOfControllerTemplate" DataType="{x:Type controllers:FileSystemController}">
        <DockPanel>
            <ToggleButton DockPanel.Dock="Top" Style="{StaticResource closeToggleButtonStyle}"
                          HorizontalAlignment="Left" Margin="16,16,0,0"
                          IsChecked="{Binding Path=IsTopDrawerOpen, RelativeSource={RelativeSource AncestorType={x:Type md:DrawerHost}}}" />
            <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">
                <WrapPanel Orientation="Horizontal" HorizontalAlignment="Center">
                    <StackPanel Orientation="Vertical" MinWidth="200" Margin="16">
                        <TextBlock FontSize="14" FontWeight="Medium" Foreground="{DynamicResource MaterialDesignBodyLight}"
                                   Text="{x:Static localization:Strings.User}" Margin="0,0,0,16" />
                        <ItemsControl ItemsSource="{Binding Path=SpecialDirectories, Mode=OneTime}" ItemTemplate="{StaticResource specialDriveItemTemplate}">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Orientation="Vertical" IsItemsHost="True" />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                        </ItemsControl>
                    </StackPanel>
                    <StackPanel Orientation="Vertical" MinWidth="200" Margin="16">
                        <TextBlock FontSize="14" FontWeight="Medium" Foreground="{DynamicResource MaterialDesignBodyLight}"
                                   Text="{x:Static localization:Strings.Drives}" Margin="0,0,0,16" />
                        <ItemsControl ItemsSource="{Binding Path=Drives, Mode=OneTime}" ItemTemplate="{StaticResource specialDriveItemTemplate}">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Orientation="Vertical" IsItemsHost="True" />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                        </ItemsControl>
                    </StackPanel>
                </WrapPanel>
            </ScrollViewer>
        </DockPanel>
    </DataTemplate>

    <DataTemplate x:Key="pathPartItemTemplate">
        <Border Padding="4">
            <Button Style="{DynamicResource MaterialDesignToolForegroundButton}"
                    Command="{x:Static internalCommands:FileSystemControlCommands.SelectDirectoryItemCommand}" CommandParameter="{Binding}">
                <DockPanel>
                    <md:PackIcon DockPanel.Dock="Right" Kind="ChevronRight" Height="24" Width="24" VerticalAlignment="Center" />
                    <TextBlock FontSize="14" Text="{Binding Path=Name}" Margin="0,0,4,0" VerticalAlignment="Center" />
                </DockPanel>
            </Button>
        </Border>
    </DataTemplate>

    <DataTemplate x:Key="directoryInfoInfoTemplate">
        <Grid Width="256">
            <Grid.RowDefinitions>
                <RowDefinition Height="144" />
                <RowDefinition Height="100*" />
            </Grid.RowDefinitions>
            <Border Background="{DynamicResource PrimaryHueMidBrush}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                <ContentControl Content="{Binding Converter={StaticResource fileSystemInfoIconConverterThumbnail}}"
                                ContentTemplateSelector="{StaticResource fileSystemInfoIconTemplateSelector}" />
            </Border>
            <ToggleButton Style="{StaticResource closeToggleButtonStyle}"
                          Foreground="{DynamicResource PrimaryHueMidForegroundBrush}"
                          HorizontalAlignment="Left" Margin="8,8,0,0"
                          IsChecked="{Binding Path=IsLeftDrawerOpen, RelativeSource={RelativeSource AncestorType={x:Type md:DrawerHost}}}" />
            <ScrollViewer Grid.Row="1" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Auto">
                <StackPanel Orientation="Vertical" Margin="16,0" HorizontalAlignment="Stretch" VerticalAlignment="Top">
                    <TextBlock Style="{StaticResource fileSystemEntryInfoNameStyle}"
                               Text="{Binding Path=Name}"
                               ToolTip="{Binding Path=Name}"
                               TextTrimming="CharacterEllipsis" />
                    <TextBlock Style="{StaticResource fileSystemEntryInfoDetailHeaderStyle}"
                               Text="{x:Static localization:Strings.Created}" />
                    <TextBlock Style="{StaticResource fileSystemEntryInfoDetailStyle}"
                               Text="{Binding Path=CreationTime, Converter={StaticResource dateTimeAgoConverter}}" />
                    <TextBlock Style="{StaticResource fileSystemEntryInfoDetailHeaderStyle}"
                               Text="{x:Static localization:Strings.LastModified}" />
                    <TextBlock Style="{StaticResource fileSystemEntryInfoDetailStyle}"
                               Text="{Binding Path=LastWriteTime, Converter={StaticResource dateTimeAgoConverter}}" />
                    <TextBlock Style="{StaticResource fileSystemEntryInfoDetailHeaderStyle}"
                               Text="{x:Static localization:Strings.LastAccess}" />
                    <TextBlock Style="{StaticResource fileSystemEntryInfoDetailStyle}"
                               Text="{Binding Path=LastAccessTime, Converter={StaticResource dateTimeAgoConverter}}" />
                </StackPanel>
            </ScrollViewer>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="fileInfoInfoTemplate">
        <Grid Width="256">
            <Grid.RowDefinitions>
                <RowDefinition Height="40" />
                <RowDefinition Height="104" />
                <RowDefinition Height="100*" />
            </Grid.RowDefinitions>
            <!-- alternative for stacking the bar and the image -->
            <!--<StackPanel Orientation="Vertical" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                <Border x:Name="test" Background="{DynamicResource PrimaryHueMidBrush}" HorizontalAlignment="Stretch" VerticalAlignment="Top" Height="40"
                        Tag="System.Windows.Media.Imaging.BitmapImage">
                    <Border.Style>
                        <Style TargetType="{x:Type Border}">
                            <Style.Triggers>
                                <DataTrigger Value="False">
                                    <DataTrigger.Binding>
                                        <MultiBinding Converter="{StaticResource objectHasTypeConverter}">
                                            <Binding Path="Content.Image" ElementName="iconPreviewContentControl" />
                                            <Binding Path="Tag" ElementName="test" />
                                        </MultiBinding>
                                    </DataTrigger.Binding>
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                                <DataTrigger Value="True">
                                    <DataTrigger.Binding>
                                        <MultiBinding Converter="{StaticResource objectHasTypeConverter}">
                                            <Binding Path="Content.Image" ElementName="iconPreviewContentControl" />
                                            <Binding Path="Tag" ElementName="test" />
                                        </MultiBinding>
                                    </DataTrigger.Binding>
                                    <Setter Property="Visibility" Value="Visible" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>
                </Border>
                <Border Background="{DynamicResource PrimaryHueMidBrush}" HorizontalAlignment="Stretch" VerticalAlignment="Top">
                    <ContentControl x:Name="iconPreviewContentControl" Height="144"
                                Content="{Binding Converter={StaticResource fileSystemInfoIconConverterInfoImagePreview}}"
                                ContentTemplateSelector="{StaticResource fileSystemInfoIconTemplateSelector}" />
                </Border>
            </StackPanel>-->
            <Border Grid.RowSpan="2" Background="{DynamicResource PrimaryHueMidBrush}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                <ContentControl x:Name="iconPreviewContentControl"
                                Content="{Binding Converter={StaticResource fileSystemInfoIconConverterInfoImagePreview}}"
                                ContentTemplateSelector="{StaticResource fileSystemInfoIconTemplateSelector}" />
            </Border>
            <Border x:Name="closeButtonBar" Background="{DynamicResource PrimaryHueMidBrush}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                    Opacity="0.5" Tag="System.Windows.Media.Imaging.BitmapImage">
                <Border.Style>
                    <Style TargetType="{x:Type Border}">
                        <Style.Triggers>
                            <DataTrigger Value="False">
                                <DataTrigger.Binding>
                                    <MultiBinding Converter="{StaticResource objectHasTypeConverter}">
                                        <Binding Path="Content.Image" ElementName="iconPreviewContentControl" />
                                        <Binding Path="Tag" ElementName="closeButtonBar" />
                                    </MultiBinding>
                                </DataTrigger.Binding>
                                <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                            <DataTrigger Value="True">
                                <DataTrigger.Binding>
                                    <MultiBinding Converter="{StaticResource objectHasTypeConverter}">
                                        <Binding Path="Content.Image" ElementName="iconPreviewContentControl" />
                                        <Binding Path="Tag" ElementName="closeButtonBar" />
                                    </MultiBinding>
                                </DataTrigger.Binding>
                                <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
            </Border>
            <ToggleButton Style="{StaticResource closeToggleButtonStyle}"
                          Foreground="{DynamicResource PrimaryHueMidForegroundBrush}"
                          HorizontalAlignment="Left" Margin="8"
                          IsChecked="{Binding Path=IsLeftDrawerOpen, RelativeSource={RelativeSource AncestorType={x:Type md:DrawerHost}}}" />
            <ScrollViewer Grid.Row="2" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Auto">
                <StackPanel Orientation="Vertical" Margin="16,0" HorizontalAlignment="Stretch" VerticalAlignment="Top">
                    <TextBlock Style="{StaticResource fileSystemEntryInfoNameStyle}"
                               Text="{Binding Path=Name}"
                               ToolTip="{Binding Path=Name}"
                               TextTrimming="CharacterEllipsis" />
                    <TextBlock Style="{StaticResource fileSystemEntryInfoDetailHeaderStyle}"
                               Text="{x:Static localization:Strings.FileSize}" />
                    <TextBlock Style="{StaticResource fileSystemEntryInfoDetailStyle}"
                               Text="{Binding Path=Length, Converter={StaticResource fileSizeConverter}}" />
                    <TextBlock Style="{StaticResource fileSystemEntryInfoDetailHeaderStyle}"
                               Text="{x:Static localization:Strings.Created}" />
                    <TextBlock Style="{StaticResource fileSystemEntryInfoDetailStyle}"
                               Text="{Binding Path=CreationTime, Converter={StaticResource dateTimeAgoConverter}}" />
                    <TextBlock Style="{StaticResource fileSystemEntryInfoDetailHeaderStyle}"
                               Text="{x:Static localization:Strings.LastModified}" />
                    <TextBlock Style="{StaticResource fileSystemEntryInfoDetailStyle}"
                               Text="{Binding Path=LastWriteTime, Converter={StaticResource dateTimeAgoConverter}}" />
                    <TextBlock Style="{StaticResource fileSystemEntryInfoDetailHeaderStyle}"
                               Text="{x:Static localization:Strings.LastAccess}" />
                    <TextBlock Style="{StaticResource fileSystemEntryInfoDetailStyle}"
                               Text="{Binding Path=LastAccessTime, Converter={StaticResource dateTimeAgoConverter}}" />
                </StackPanel>
            </ScrollViewer>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="fileSystemInfoPackIconTemplate">
        <md:PackIcon Kind="{Binding}" Height="64" Width="64" HorizontalAlignment="Center" VerticalAlignment="Center"
                     Foreground="{DynamicResource PrimaryHueMidForegroundBrush}" />
    </DataTemplate>

    <DataTemplate x:Key="fileSystemInfoImageTemplate">
        <Image Source="{Binding}" Stretch="UniformToFill" HorizontalAlignment="Center" VerticalAlignment="Center" />
    </DataTemplate>

    <DataTemplate x:Key="fileSystemInfoAsyncImageTaskTemplate">
        <ContentControl HorizontalAlignment="Center" VerticalAlignment="Center"
                        Content="{Binding Path=Image}" ContentTemplateSelector="{StaticResource fileSystemInfoIconTemplateSelector}" />
    </DataTemplate>

    <Style x:Key="fileSystemEntriesItemsControlStyle" TargetType="{x:Type ItemsControl}">
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="VirtualizingStackPanel.IsVirtualizing" Value="True" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="VirtualizingPanel.ScrollUnit" Value="Pixel" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ItemsControl}">
                    <Border SnapsToDevicePixels="True">
                        <ScrollViewer Focusable="False">
                            <ItemsPresenter SnapsToDevicePixels="True" />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel IsItemsHost="True" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=CreateNewDirectoryEnabled, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:FileSystemControl}}}" Value="False">
                <Setter Property="Margin" Value="0" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=CreateNewDirectoryEnabled, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:FileSystemControl}}}" Value="True">
                <Setter Property="Margin" Value="0,20,0,0" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="selectionItemsControlStyle" TargetType="{x:Type ItemsControl}">
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Margin" Value="0,16,0,0" />
        <Setter Property="VirtualizingStackPanel.IsVirtualizing" Value="True" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="VirtualizingPanel.ScrollUnit" Value="Pixel" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ItemsControl}">
                    <Border SnapsToDevicePixels="True">
                        <ScrollViewer Focusable="False">
                            <ItemsPresenter SnapsToDevicePixels="True" />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel IsItemsHost="True" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="fileSystemEntryItemButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="0,8,0,8"/>
        <Setter Property="md:RippleAssist.Feedback" Value="{DynamicResource MaterialDesignFlatButtonRipple}" />
        <Setter Property="md:RippleAssist.ClipToBounds" Value="True"/>
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <md:Ripple Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" Focusable="False"
                               HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                               VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                               Padding="{TemplateBinding Padding}"
                               SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="fileFiltersComboBoxStyle" TargetType="{x:Type ComboBox}" BasedOn="{StaticResource MaterialDesignComboBox}">
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Width" Value="120" />
        <Setter Property="Margin" Value="16" />
        <Setter Property="SelectedIndex" Value="{Binding Path=FilterIndex, RelativeSource={RelativeSource AncestorType={x:Type controls:BaseFileControl}}}" />
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Text="{Binding Path=Label}" HorizontalAlignment="Left" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="fileFiltersComboBoxMultipleControlStyle" TargetType="{x:Type ComboBox}" BasedOn="{StaticResource fileFiltersComboBoxStyle}">
        <Setter Property="SelectedIndex" Value="{Binding Path=FilterIndex, RelativeSource={RelativeSource AncestorType={x:Type controls:OpenMultipleFilesControl}}}" />
    </Style>

    <DataTemplate x:Key="directoryInfoItemTemplate">
        <Grid Height="72" Background="Transparent" HorizontalAlignment="Stretch"
              IsEnabled="{Binding Path=IsEnabled, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}">
            <Border Background="{Binding Path=Foreground, Converter={StaticResource brushRoundConverter}, ElementName=itemButton}"
                    HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                <Border.Style>
                    <Style TargetType="{x:Type Border}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type Grid}}}" Value="True">
                                <Setter Property="Opacity" Value="0.1" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type Grid}}}" Value="False">
                                <Setter Property="Opacity" Value="0" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
            </Border>
            <Border Background="{Binding Path=Foreground, Converter={StaticResource brushRoundConverter}, ElementName=itemButton}"
                    HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                <Border.Style>
                    <Style TargetType="{x:Type Border}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=IsSelected}" Value="True">
                                <Setter Property="Opacity" Value="0.1" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=IsSelected}" Value="False">
                                <Setter Property="Opacity" Value="0" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
            </Border>
            <Button x:Name="itemButton" Style="{StaticResource fileSystemEntryItemButtonStyle}"
                    Command="{x:Static internalCommands:FileSystemControlCommands.SelectFileSystemEntryCommand}" CommandParameter="{Binding Path=Value}">
                <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="72" />
                        <ColumnDefinition Width="100*" />
                        <ColumnDefinition Width="56" />
                    </Grid.ColumnDefinitions>
                    <ContentControl Content="{Binding Path=Value, Converter={StaticResource fileSystemInfoIconConverterThumbnail}}"
                                    ContentTemplateSelector="{StaticResource fileSystemEntryItemIconTemplateSelector}"
                                    Focusable="False" />
                    <StackPanel Grid.Column="1" Orientation="Vertical" HorizontalAlignment="Stretch" VerticalAlignment="Center">
                        <TextBlock Foreground="{DynamicResource MaterialDesignBody}" FontSize="16"
                                   Text="{Binding Path=Value.Name, Mode=OneTime}" ToolTip="{Binding Path=Value.Name, Mode=OneTime}" TextTrimming="CharacterEllipsis" />
                        <TextBlock Foreground="{DynamicResource MaterialDesignBodyLight}" FontSize="12"
                                   Text="{Binding Path=Value.LastWriteTime, Mode=OneTime, Converter={StaticResource dateTimeAgoConverter}}" Margin="0,4,0,0" />
                    </StackPanel>
                    <Button Grid.Column="2" Cursor="Hand"
                            Command="{x:Static internalCommands:FileSystemControlCommands.ShowInfoCommand}" CommandParameter="{Binding Path=Value}"
                            HorizontalAlignment="Center" VerticalAlignment="Center" Height="24" Width="24">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border Background="Transparent">
                                                <ContentPresenter />
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Button.Style>
                        <md:PackIcon Grid.Column="2" Kind="Information" Height="24" Width="24" HorizontalAlignment="Center" VerticalAlignment="Center"
                                     Foreground="{DynamicResource MaterialDesignDivider}" SnapsToDevicePixels="True" />
                    </Button>
                </Grid>
            </Button>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="fileInfoItemTemplate">
        <Grid Height="72" Background="Transparent" HorizontalAlignment="Stretch"
              IsEnabled="{Binding Path=IsEnabled, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}">
            <Border Background="{Binding Path=Foreground, Converter={StaticResource brushRoundConverter}, ElementName=itemButton}"
                    HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                <Border.Style>
                    <Style TargetType="{x:Type Border}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type Grid}}}" Value="True">
                                <Setter Property="Opacity" Value="0.1" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type Grid}}}" Value="False">
                                <Setter Property="Opacity" Value="0" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
            </Border>
            <Border Background="{Binding Path=Foreground, Converter={StaticResource brushRoundConverter}, ElementName=itemButton}"
                    HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                <Border.Style>
                    <Style TargetType="{x:Type Border}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=IsSelected}" Value="True">
                                <Setter Property="Opacity" Value="0.1" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=IsSelected}" Value="False">
                                <Setter Property="Opacity" Value="0" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
            </Border>
            <Button x:Name="itemButton" Style="{StaticResource fileSystemEntryItemButtonStyle}"
                    Command="{x:Static internalCommands:FileSystemControlCommands.SelectFileSystemEntryCommand}" CommandParameter="{Binding Path=Value}">
                <Button.InputBindings>
                    <MouseBinding Gesture="LeftDoubleClick"
                                  Command="{x:Static internalCommands:FileSystemControlCommands.FileSystemEntryDoubleClickCommand}" CommandParameter="{Binding Path=Value}" />
                    <KeyBinding Key="Enter"
                                Command="{x:Static internalCommands:FileSystemControlCommands.FileSystemEntryDoubleClickCommand}" CommandParameter="{Binding Path=Value}" />
                </Button.InputBindings>
                <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="72" />
                        <ColumnDefinition Width="100*" />
                        <ColumnDefinition Width="56" />
                    </Grid.ColumnDefinitions>
                    <ContentControl Content="{Binding Path=Value, Converter={StaticResource fileSystemInfoIconConverterThumbnail}}"
                                    ContentTemplateSelector="{StaticResource fileSystemEntryItemIconTemplateSelector}"
                                    Focusable="False" />
                    <StackPanel Grid.Column="1" Orientation="Vertical" HorizontalAlignment="Stretch" VerticalAlignment="Center">
                        <TextBlock Foreground="{DynamicResource MaterialDesignBody}" FontSize="16"
                                   Text="{Binding Path=Value.Name, Mode=OneTime}" ToolTip="{Binding Path=Value.Name, Mode=OneTime}" TextTrimming="CharacterEllipsis" />
                        <TextBlock Foreground="{DynamicResource MaterialDesignBodyLight}" FontSize="12"
                                   Text="{Binding Path=Value.LastWriteTime, Mode=OneTime, Converter={StaticResource dateTimeAgoConverter}}" Margin="0,4,0,0" />
                    </StackPanel>
                    <Button Grid.Column="2" Cursor="Hand"
                            Command="{x:Static internalCommands:FileSystemControlCommands.ShowInfoCommand}" CommandParameter="{Binding Value}"
                            HorizontalAlignment="Center" VerticalAlignment="Center" Height="24" Width="24">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border Background="Transparent">
                                                <ContentPresenter />
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Button.Style>
                        <md:PackIcon Grid.Column="2" Kind="Information" Height="24" Width="24" HorizontalAlignment="Center" VerticalAlignment="Center"
                                     Foreground="{DynamicResource MaterialDesignDivider}" SnapsToDevicePixels="True" />
                    </Button>
                </Grid>
            </Button>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="directoryInfoItemMultipleTemplate">
        <Grid Height="72" Background="Transparent" HorizontalAlignment="Stretch"
              IsEnabled="{Binding Path=IsEnabled, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}">
            <Border Background="{Binding Path=Foreground, Converter={StaticResource brushRoundConverter}, ElementName=itemButton}"
                    HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                <Border.Style>
                    <Style TargetType="{x:Type Border}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type Grid}}}" Value="True">
                                <Setter Property="Opacity" Value="0.1" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type Grid}}}" Value="False">
                                <Setter Property="Opacity" Value="0" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
            </Border>
            <Border Background="{Binding Path=Foreground, Converter={StaticResource brushRoundConverter}, ElementName=itemButton}"
                    HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                <Border.Style>
                    <Style TargetType="{x:Type Border}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=IsSelected}" Value="True">
                                <Setter Property="Opacity" Value="0.1" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=IsSelected}" Value="False">
                                <Setter Property="Opacity" Value="0" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
            </Border>
            <Button x:Name="itemButton" Style="{StaticResource fileSystemEntryItemButtonStyle}"
                    Command="{x:Static internalCommands:FileSystemControlCommands.SelectFileSystemEntryCommand}" CommandParameter="{Binding Path=Value}">
                <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="72" />
                        <ColumnDefinition Width="100*" />
                        <ColumnDefinition Width="56" />
                    </Grid.ColumnDefinitions>
                    <ContentControl Content="{Binding Path=Value, Converter={StaticResource fileSystemInfoIconConverterThumbnail}}"
                                    ContentTemplateSelector="{StaticResource fileSystemEntryItemIconTemplateSelector}"
                                    Focusable="False" />
                    <StackPanel Grid.Column="1" Orientation="Vertical" HorizontalAlignment="Stretch" VerticalAlignment="Center">
                        <TextBlock Foreground="{DynamicResource MaterialDesignBody}" FontSize="16"
                                   Text="{Binding Path=Value.Name, Mode=OneTime}" ToolTip="{Binding Path=Value.Name, Mode=OneTime}" TextTrimming="CharacterEllipsis" />
                        <TextBlock Foreground="{DynamicResource MaterialDesignBodyLight}" FontSize="12"
                                   Text="{Binding Path=Value.LastWriteTime, Mode=OneTime, Converter={StaticResource dateTimeAgoConverter}}" Margin="0,4,0,0" />
                    </StackPanel>
                    <md:PopupBox Grid.Column="2" Foreground="{DynamicResource MaterialDesignDivider}" HorizontalAlignment="Center" VerticalAlignment="Center" Padding="0"
                                 Width="24" Height="24">
                        <Border Padding="0,8,0,8">
                            <StackPanel Orientation="Vertical">
                                <Button Foreground="{DynamicResource MaterialDesignBody}"
                                        Height="48" Margin="0" Padding="0" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch"
                                        Command="{x:Static internalCommands:FileSystemControlCommands.SelectDirectoryCommand}" CommandParameter="{Binding Path=Value}">
                                    <DockPanel HorizontalAlignment="Stretch" VerticalAlignment="Center">
                                        <md:PackIcon DockPanel.Dock="Left" Width="24" Height="24" Foreground="{DynamicResource MaterialDesignBodyLight}"
                                                     Margin="24,0,20,0" VerticalAlignment="Center">
                                            <md:PackIcon.Style>
                                                <Style TargetType="{x:Type md:PackIcon}">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding Path=IsSelected}" Value="False">
                                                            <Setter Property="Kind" Value="CheckboxBlankOutline" />
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding Path=IsSelected}" Value="True">
                                                            <Setter Property="Kind" Value="CheckboxMarked" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </md:PackIcon.Style>
                                        </md:PackIcon>
                                        <TextBlock Margin="0,0,24,0" VerticalAlignment="Center">
                                            <TextBlock.Style>
                                                <Style TargetType="TextBlock">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding Path=IsSelected}" Value="False">
                                                            <Setter Property="Text" Value="{x:Static localization:Strings.Select}" />
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding Path=IsSelected}" Value="True">
                                                            <Setter Property="Text" Value="{x:Static localization:Strings.Remove}" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Style>
                                        </TextBlock>
                                    </DockPanel>
                                </Button>
                                <Button Foreground="{DynamicResource MaterialDesignBody}"
                                        Height="48" Margin="0" Padding="0" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch"
                                        Command="{x:Static internalCommands:FileSystemControlCommands.ShowInfoCommand}" CommandParameter="{Binding Path=Value}">
                                    <DockPanel>
                                        <md:PackIcon DockPanel.Dock="Left" Kind="Information" Width="24" Height="24" Foreground="{DynamicResource MaterialDesignBodyLight}"
                                                     Margin="24,0,20,0" VerticalAlignment="Center" />
                                        <TextBlock Text="{x:Static localization:Strings.Details}" Margin="0,0,24,0" VerticalAlignment="Center" />
                                    </DockPanel>
                                </Button>
                            </StackPanel>
                        </Border>
                    </md:PopupBox>
                </Grid>
            </Button>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="fileInfoItemMultipleTemplate">
        <Grid Height="72" Background="Transparent" HorizontalAlignment="Stretch"
              IsEnabled="{Binding Path=IsEnabled, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}">
            <Border Background="{Binding Path=Foreground, Converter={StaticResource brushRoundConverter}, ElementName=itemButton}"
                    HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                <Border.Style>
                    <Style TargetType="{x:Type Border}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type Grid}}}" Value="True">
                                <Setter Property="Opacity" Value="0.1" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type Grid}}}" Value="False">
                                <Setter Property="Opacity" Value="0" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
            </Border>
            <Border Background="{Binding Path=Foreground, Converter={StaticResource brushRoundConverter}, ElementName=itemButton}"
                    HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                <Border.Style>
                    <Style TargetType="{x:Type Border}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=IsSelected}" Value="True">
                                <Setter Property="Opacity" Value="0.1" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=IsSelected}" Value="False">
                                <Setter Property="Opacity" Value="0" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
            </Border>
            <Button x:Name="itemButton" Style="{StaticResource fileSystemEntryItemButtonStyle}">
                <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="72" />
                        <ColumnDefinition Width="100*" />
                        <ColumnDefinition Width="56" />
                    </Grid.ColumnDefinitions>
                    <ContentControl Content="{Binding Path=Value, Converter={StaticResource fileSystemInfoIconConverterThumbnail}}"
                                    ContentTemplateSelector="{StaticResource fileSystemEntryItemIconTemplateSelector}"
                                    Focusable="False" />
                    <StackPanel Grid.Column="1" Orientation="Vertical" HorizontalAlignment="Stretch" VerticalAlignment="Center">
                        <TextBlock Foreground="{DynamicResource MaterialDesignBody}" FontSize="16"
                                   Text="{Binding Path=Value.Name, Mode=OneTime}" ToolTip="{Binding Path=Value.Name, Mode=OneTime}" TextTrimming="CharacterEllipsis" />
                        <TextBlock Foreground="{DynamicResource MaterialDesignBodyLight}" FontSize="12"
                                   Text="{Binding Path=Value.LastWriteTime, Mode=OneTime, Converter={StaticResource dateTimeAgoConverter}}" Margin="0,4,0,0" />
                    </StackPanel>
                    <md:PopupBox Grid.Column="2" Foreground="{DynamicResource MaterialDesignDivider}" HorizontalAlignment="Center" VerticalAlignment="Center" Padding="0"
                                     Width="24" Height="24">
                        <Border Padding="0,8,0,8">
                            <StackPanel Orientation="Vertical">
                                <Button Foreground="{DynamicResource MaterialDesignBody}"
                                        Height="48" Margin="0" Padding="0" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch"
                                        Command="{x:Static internalCommands:FileSystemControlCommands.SelectFileCommand}" CommandParameter="{Binding Path=Value}">
                                    <DockPanel HorizontalAlignment="Stretch" VerticalAlignment="Center">
                                        <md:PackIcon DockPanel.Dock="Left" Width="24" Height="24" Foreground="{DynamicResource MaterialDesignBodyLight}"
                                                     Margin="24,0,20,0" VerticalAlignment="Center">
                                            <md:PackIcon.Style>
                                                <Style TargetType="{x:Type md:PackIcon}">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding Path=IsSelected}" Value="False">
                                                            <Setter Property="Kind" Value="CheckboxBlankOutline" />
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding Path=IsSelected}" Value="True">
                                                            <Setter Property="Kind" Value="CheckboxMarked" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </md:PackIcon.Style>
                                        </md:PackIcon>
                                        <TextBlock Margin="0,0,24,0" VerticalAlignment="Center">
                                            <TextBlock.Style>
                                                <Style TargetType="TextBlock">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding Path=IsSelected}" Value="False">
                                                            <Setter Property="Text" Value="{x:Static localization:Strings.Select}" />
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding Path=IsSelected}" Value="True">
                                                            <Setter Property="Text" Value="{x:Static localization:Strings.Remove}" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Style>
                                        </TextBlock>
                                    </DockPanel>
                                </Button>
                                <Button Foreground="{DynamicResource MaterialDesignBody}"
                                        Height="48" Margin="0" Padding="0" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch"
                                        Command="{x:Static internalCommands:FileSystemControlCommands.ShowInfoCommand}" CommandParameter="{Binding Path=Value}">
                                    <DockPanel>
                                        <md:PackIcon DockPanel.Dock="Left" Kind="Information" Width="24" Height="24" Foreground="{DynamicResource MaterialDesignBodyLight}"
                                                     Margin="24,0,20,0" VerticalAlignment="Center" />
                                        <TextBlock Text="{x:Static localization:Strings.Details}" Margin="0,0,24,0" VerticalAlignment="Center" />
                                    </DockPanel>
                                </Button>
                            </StackPanel>
                        </Border>
                    </md:PopupBox>
                </Grid>
            </Button>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="directoryInfoMultipleSelectionTemplate">
        <Grid Height="56" Background="Transparent" HorizontalAlignment="Stretch"
              IsEnabled="{Binding Path=IsEnabled, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}">
            <Border Background="{Binding Path=Foreground, Converter={StaticResource brushRoundConverter}, ElementName=nameTextBlock}"
                    HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                <Border.Style>
                    <Style TargetType="{x:Type Border}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type Grid}}}" Value="True">
                                <Setter Property="Opacity" Value="0.1" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type Grid}}}" Value="False">
                                <Setter Property="Opacity" Value="0" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
            </Border>
            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="72" />
                    <ColumnDefinition Width="100*" />
                    <ColumnDefinition Width="56" />
                </Grid.ColumnDefinitions>
                <ContentControl Content="{Binding Converter={StaticResource fileSystemInfoIconConverterThumbnail}}"
                                ContentTemplateSelector="{StaticResource fileSystemEntryItemIconTemplateSelector}" />
                <TextBlock Grid.Column="1" x:Name="nameTextBlock" Foreground="{DynamicResource MaterialDesignBody}" FontSize="16"
                           Text="{Binding Path=Name, Mode=OneTime}" ToolTip="{Binding Path=FullName, Mode=OneTime}" TextTrimming="CharacterEllipsis"
                           VerticalAlignment="Center" HorizontalAlignment="Stretch" />
                <Button Grid.Column="2" Cursor="Hand" ToolTip="{x:Static localization:Strings.Remove}"
                        Command="{x:Static internalCommands:FileSystemControlCommands.SelectDirectoryCommand}" CommandParameter="{Binding}"
                        HorizontalAlignment="Center" VerticalAlignment="Center" Height="24" Width="24">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Border Background="Transparent">
                                            <ContentPresenter />
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Button.Style>
                    <md:PackIcon Grid.Column="2" Kind="Close" Height="24" Width="24" HorizontalAlignment="Center" VerticalAlignment="Center"
                                 Foreground="{DynamicResource MaterialDesignDivider}" SnapsToDevicePixels="True" />
                </Button>
            </Grid>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="fileInfoMultipleSelectionTemplate">
        <Grid Height="56" Background="Transparent" HorizontalAlignment="Stretch"
              IsEnabled="{Binding Path=IsEnabled, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}">
            <Border Background="{Binding Path=Foreground, Converter={StaticResource brushRoundConverter}, ElementName=nameTextBlock}"
                    HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                <Border.Style>
                    <Style TargetType="{x:Type Border}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type Grid}}}" Value="True">
                                <Setter Property="Opacity" Value="0.1" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type Grid}}}" Value="False">
                                <Setter Property="Opacity" Value="0" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
            </Border>
            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="72" />
                    <ColumnDefinition Width="100*" />
                    <ColumnDefinition Width="56" />
                </Grid.ColumnDefinitions>
                <ContentControl Content="{Binding Converter={StaticResource fileSystemInfoIconConverterThumbnail}}"
                                ContentTemplateSelector="{StaticResource fileSystemEntryItemIconTemplateSelector}" />
                <TextBlock Grid.Column="1" x:Name="nameTextBlock" Foreground="{DynamicResource MaterialDesignBody}" FontSize="16"
                           Text="{Binding Path=Name, Mode=OneTime}" ToolTip="{Binding Path=FullName, Mode=OneTime}" TextTrimming="CharacterEllipsis"
                           VerticalAlignment="Center" HorizontalAlignment="Stretch" />
                <Button Grid.Column="2" Cursor="Hand" ToolTip="{x:Static localization:Strings.Remove}"
                        Command="{x:Static internalCommands:FileSystemControlCommands.SelectFileCommand}" CommandParameter="{Binding}"
                        HorizontalAlignment="Center" VerticalAlignment="Center" Height="24" Width="24">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Border Background="Transparent">
                                            <ContentPresenter />
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Button.Style>
                    <md:PackIcon Grid.Column="2" Kind="Close" Height="24" Width="24" HorizontalAlignment="Center" VerticalAlignment="Center"
                                 Foreground="{DynamicResource MaterialDesignDivider}" SnapsToDevicePixels="True" />
                </Button>
            </Grid>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="fileSystemEntriesGroupHeaderTemplate">
        <Border Margin="72,16,0,16" HorizontalAlignment="Stretch" BorderBrush="{DynamicResource MaterialDesignDivider}" SnapsToDevicePixels="True">
            <TextBlock FontSize="14" FontWeight="Medium" Foreground="{DynamicResource MaterialDesignBodyLight}"
                       Text="{Binding Path=Header, Mode=OneTime}" />
            <Border.Style>
                <Style TargetType="{x:Type Border}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=ShowSeparator}" Value="False">
                            <Setter Property="BorderThickness" Value="0" />
                            <Setter Property="Padding" Value="0" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=ShowSeparator}" Value="True">
                            <Setter Property="BorderThickness" Value="0,1,0,0" />
                            <Setter Property="Padding" Value="0,16,0,0" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
        </Border>
    </DataTemplate>

    <DataTemplate x:Key="fileSystemEntryItemPackIconTemplate">
        <Grid Height="40" Width="40" HorizontalAlignment="Center" VerticalAlignment="Center">
            <Ellipse Fill="{Binding Converter={StaticResource fileSystemInfoPackIconColorConverter}}" Height="40" Width="40"
                     HorizontalAlignment="Center" VerticalAlignment="Center" />
            <md:PackIcon Kind="{Binding}" Height="24" Width="24" HorizontalAlignment="Center" VerticalAlignment="Center"
                         Foreground="{DynamicResource MaterialDesignBackground}" />
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="fileSystemEntryItemImageIconTemplate">
        <Ellipse Height="40" Width="40" HorizontalAlignment="Center" VerticalAlignment="Center">
            <Ellipse.Fill>
                <ImageBrush ImageSource="{Binding}" Stretch="UniformToFill" />
            </Ellipse.Fill>
        </Ellipse>
    </DataTemplate>

    <DataTemplate x:Key="fileSystemEntryItemAsyncImageTaskIconTemplate">
        <ContentControl Height="40" Width="40" HorizontalAlignment="Center" VerticalAlignment="Center"
                        Content="{Binding Path=Image}" ContentTemplateSelector="{StaticResource fileSystemEntryItemIconTemplateSelector}" />
    </DataTemplate>

    <Style x:Key="showCreateNewDirectoryButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource MaterialDesignFloatingActionMiniAccentButton}">
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Bottom" />
        <Setter Property="Margin" Value="16,0,0,-20" />
        <Setter Property="Visibility" Value="{Binding Path=CreateNewDirectoryEnabled, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:FileSystemControl}}, Converter={StaticResource trueToVisibleConverter}}" />
        <Setter Property="Content">
            <Setter.Value>
                <md:PackIcon Kind="Plus" Width="24" Height="24" />
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="createNewDirectoryTemplate" DataType="{x:Type controls:FileSystemControl}">
        <StackPanel Orientation="Vertical" HorizontalAlignment="Stretch">
            <TextBox HorizontalAlignment="Stretch" Margin="16" Text="{Binding Path=NewDirectoryName, Mode=TwoWay}" md:HintAssist.Hint="{Binding Source={x:Static localization:Strings.NewDirectoryName}}" />
            <Button Style="{DynamicResource MaterialDesignFlatButton}"
                    Content="{Binding Source={x:Static localization:Strings.Create}, Converter={StaticResource upperCaseConverter}}"
                    HorizontalAlignment="Right" Margin="0,0,8,8"
                    Command="{x:Static internalCommands:FileSystemControlCommands.CreateNewDirectoryCommand}" />
        </StackPanel>
    </DataTemplate>

    <Style x:Key="emptyHintTextBlockStyle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontWeight" Value="Medium" />
        <Setter Property="TextWrapping" Value="WrapWithOverflow" />
        <Setter Property="Margin" Value="16" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Top" />
    </Style>

    <Style TargetType="{x:Type controls:OpenDirectoryControl}">
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="Background" Value="{DynamicResource MaterialDesignBackground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:OpenDirectoryControl}">
                    <Grid>
                        <md:DrawerHost x:Name="drawerHost" LeftDrawerBackground="{TemplateBinding Background}" TopDrawerBackground="{TemplateBinding Background}"
                                       BottomDrawerBackground="{TemplateBinding Background}"
                                       HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}">
                            <md:DrawerHost.TopDrawerContent>
                                <ContentControl Content="{Binding Path=Controller, RelativeSource={RelativeSource TemplatedParent}, Mode=OneTime}"
                                                ContentTemplate="{StaticResource specialDrivesOfControllerTemplate}" />
                            </md:DrawerHost.TopDrawerContent>
                            <md:DrawerHost.LeftDrawerContent>
                                <ContentControl Content="{TemplateBinding FileSystemInfoToShow}" ContentTemplateSelector="{StaticResource fileSystemEntryInfoTemplateSelector}" Width="256" />
                            </md:DrawerHost.LeftDrawerContent>
                            <md:DrawerHost.BottomDrawerContent>
                                <!--<ContentControl Content="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:OpenDirectoryControl}}}" ContentTemplate="{StaticResource createNewDirectoryTemplate}" />-->
                                <!-- we need some duplicate code unfortunately, because the binding will cause problems in dialogs -->
                                <StackPanel Orientation="Vertical" HorizontalAlignment="Stretch">
                                    <TextBox HorizontalAlignment="Stretch" Margin="16"
                                             Text="{Binding Path=NewDirectoryName, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                             md:HintAssist.Hint="{Binding Source={x:Static localization:Strings.NewDirectoryName}}" />
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="8,0,8,8">
                                        <Button Style="{DynamicResource MaterialDesignFlatButton}"
                                                Content="{Binding Source={x:Static localization:Strings.Cancel}, Converter={StaticResource upperCaseConverter}}"
                                                Command="{x:Static internalCommands:FileSystemControlCommands.CancelNewDirectoryCommand}" />
                                        <Button Style="{DynamicResource MaterialDesignFlatButton}"
                                                Content="{Binding Source={x:Static localization:Strings.Create}, Converter={StaticResource upperCaseConverter}}"
                                                Margin="8,0,0,0"
                                                Command="{x:Static internalCommands:FileSystemControlCommands.CreateNewDirectoryCommand}" />
                                    </StackPanel>
                                </StackPanel>
                            </md:DrawerHost.BottomDrawerContent>
                            <Grid Background="{TemplateBinding Background}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="100*" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <DockPanel Background="{DynamicResource PrimaryHueMidBrush}" TextBlock.Foreground="{DynamicResource PrimaryHueMidForegroundBrush}"
                                           Height="64">
                                    <StackPanel DockPanel.Dock="Right" Orientation="Horizontal">
                                        <Button Style="{DynamicResource MaterialDesignToolForegroundButton}" Margin="0,0,8,0"
                                                Visibility="{Binding Path=SwitchPathPartsAsButtonsEnabled, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource trueToVisibleConverter}}"
                                                Command="{x:Static internalCommands:FileSystemControlCommands.SwitchPathPartsAsButtonsCommand}">
                                            <md:PackIcon Kind="FormTextbox" Height="24" Width="24" HorizontalAlignment="Center" VerticalAlignment="Center"
                                                         Foreground="{DynamicResource PrimaryHueMidForegroundBrush}" />
                                        </Button>
                                        <Button Style="{DynamicResource MaterialDesignToolForegroundButton}" Margin="0,0,8,0"
                                                Command="{x:Static internalCommands:FileSystemControlCommands.OpenSpecialDirectoriesDrawerCommand}">
                                            <md:PackIcon Kind="DotsVertical" Height="24" Width="24" HorizontalAlignment="Center" VerticalAlignment="Center"
                                                         Foreground="{DynamicResource PrimaryHueMidForegroundBrush}" />
                                        </Button>
                                    </StackPanel>
                                    <TextBlock FontSize="20" Margin="72,0,16,0"
                                               Text="{x:Static localization:Strings.SelectDirectory}" VerticalAlignment="Center" />
                                </DockPanel>
                                <Grid Grid.Row="1" Background="{DynamicResource PrimaryHueMidBrush}" TextBlock.Foreground="{DynamicResource PrimaryHueMidForegroundBrush}">
                                    <Grid.Style>
                                        <Style TargetType="Grid">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Path=PathPartsAsButtons, RelativeSource={RelativeSource TemplatedParent}}" Value="False">
                                                    <Setter Property="Height" Value="64" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Path=PathPartsAsButtons, RelativeSource={RelativeSource TemplatedParent}}" Value="True">
                                                    <Setter Property="MinHeight" Value="64" />
                                                    <Setter Property="MaxHeight" Value="128" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Grid.Style>
                                    <ScrollViewer x:Name="pathPartsScrollViewer" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                                  HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto"
                                                  Visibility="{Binding Path=PathPartsAsButtons, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource trueToVisibleConverter}}">
                                        <ItemsControl x:Name="pathPartsItemsControl" Margin="68,0,0,0" VerticalAlignment="Center" ItemTemplate="{StaticResource pathPartItemTemplate}">
                                            <ItemsControl.ItemsPanel>
                                                <ItemsPanelTemplate>
                                                    <WrapPanel Orientation="Horizontal" IsItemsHost="True" />
                                                </ItemsPanelTemplate>
                                            </ItemsControl.ItemsPanel>
                                        </ItemsControl>
                                    </ScrollViewer>
                                    <Border Background="{DynamicResource MaterialDesignBackground}"
                                            Margin="16,0" CornerRadius="4" HorizontalAlignment="Stretch" VerticalAlignment="Center"
                                            Visibility="{Binding Path=PathPartsAsButtons, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource falseToVisibleConverter}}">
                                        <TextBox x:Name="currentDirectoryTextBox" Foreground="{DynamicResource MaterialDesignBody}" FontSize="14" Margin="8" HorizontalAlignment="Stretch" VerticalAlignment="Center" />
                                    </Border>
                                </Grid>
                                <ItemsControl x:Name="fileSystemEntryItemsControl" Grid.Row="2" Style="{StaticResource fileSystemEntriesItemsControlStyle}"
                                              ItemTemplate="{StaticResource directoryInfoItemTemplate}" />
                                <TextBlock x:Name="emptyDirectoryTextBlock" Grid.Row="2" Style="{StaticResource emptyHintTextBlockStyle}" Text="{x:Static localization:Strings.EmptyDirectory}" />
                                <Border Grid.Row="3" MinHeight="52" BorderThickness="0,1,0,0" BorderBrush="{DynamicResource MaterialDesignDivider}" SnapsToDevicePixels="True">
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Center">
                                        <Button Style="{DynamicResource MaterialDesignFlatButton}"
                                                Content="{Binding Source={x:Static localization:Strings.Cancel}, Converter={StaticResource upperCaseConverter}}"
                                                Command="{x:Static internalCommands:FileSystemControlCommands.CancelCommand}"
                                                Margin="0,0,8,0" />
                                        <Button Style="{DynamicResource MaterialDesignFlatButton}"
                                                IsEnabled="{Binding Path=CurrentDirectory, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource notNullBooleanConverter}}"
                                                Content="{Binding Source={x:Static localization:Strings.Select}, Converter={StaticResource upperCaseConverter}}"
                                                Command="{x:Static internalCommands:FileSystemControlCommands.SelectDirectoryCommand}"
                                                Margin="0,0,8,0" />
                                    </StackPanel>
                                </Border>
                                <Button Grid.Row="1" Style="{StaticResource showCreateNewDirectoryButtonStyle}" Command="{x:Static internalCommands:FileSystemControlCommands.ShowCreateNewDirectoryCommand}" />
                            </Grid>
                        </md:DrawerHost>
                        <md:Snackbar Grid.Row="2" Grid.RowSpan="2" MessageQueue="{TemplateBinding SnackbarMessageQueue}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type controls:OpenFileControl}">
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="Background" Value="{DynamicResource MaterialDesignBackground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:OpenFileControl}">
                    <Grid>
                        <md:DrawerHost x:Name="drawerHost" LeftDrawerBackground="{TemplateBinding Background}" TopDrawerBackground="{TemplateBinding Background}"
                                       HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}">
                            <md:DrawerHost.TopDrawerContent>
                                <ContentControl Content="{Binding Path=Controller, RelativeSource={RelativeSource TemplatedParent}, Mode=OneTime}"
                                                ContentTemplate="{StaticResource specialDrivesOfControllerTemplate}" />
                            </md:DrawerHost.TopDrawerContent>
                            <md:DrawerHost.LeftDrawerContent>
                                <ContentControl Content="{TemplateBinding FileSystemInfoToShow}" ContentTemplateSelector="{StaticResource fileSystemEntryInfoTemplateSelector}" Width="256" />
                            </md:DrawerHost.LeftDrawerContent>
                            <!-- opening a file does not require the feature to create a new directory -->
                            <Grid Background="{TemplateBinding Background}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="100*" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <DockPanel Background="{DynamicResource PrimaryHueMidBrush}" TextBlock.Foreground="{DynamicResource PrimaryHueMidForegroundBrush}"
                                           Height="64">
                                    <StackPanel DockPanel.Dock="Right" Orientation="Horizontal">
                                        <Button Style="{DynamicResource MaterialDesignToolForegroundButton}" Margin="0,0,8,0"
                                                Visibility="{Binding Path=SwitchPathPartsAsButtonsEnabled, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource trueToVisibleConverter}}"
                                                Command="{x:Static internalCommands:FileSystemControlCommands.SwitchPathPartsAsButtonsCommand}">
                                            <md:PackIcon Kind="FormTextbox" Height="24" Width="24" HorizontalAlignment="Center" VerticalAlignment="Center"
                                                         Foreground="{DynamicResource PrimaryHueMidForegroundBrush}" />
                                        </Button>
                                        <Button Style="{DynamicResource MaterialDesignToolForegroundButton}" Margin="0,0,8,0"
                                                Command="{x:Static internalCommands:FileSystemControlCommands.OpenSpecialDirectoriesDrawerCommand}">
                                            <md:PackIcon Kind="DotsVertical" Height="24" Width="24" HorizontalAlignment="Center" VerticalAlignment="Center"
                                                         Foreground="{DynamicResource PrimaryHueMidForegroundBrush}" />
                                        </Button>
                                    </StackPanel>
                                    <TextBlock FontSize="20" Margin="72,0,16,0"
                                               Text="{x:Static localization:Strings.OpenFile}" VerticalAlignment="Center" />
                                </DockPanel>
                                <Grid Grid.Row="1" MinHeight="64" MaxHeight="128"
                                        Background="{DynamicResource PrimaryHueMidBrush}" TextBlock.Foreground="{DynamicResource PrimaryHueMidForegroundBrush}">
                                    <Grid.Style>
                                        <Style TargetType="Grid">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Path=PathPartsAsButtons, RelativeSource={RelativeSource TemplatedParent}}" Value="False">
                                                    <Setter Property="Height" Value="64" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Path=PathPartsAsButtons, RelativeSource={RelativeSource TemplatedParent}}" Value="True">
                                                    <Setter Property="MinHeight" Value="64" />
                                                    <Setter Property="MaxHeight" Value="128" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Grid.Style>
                                    <ScrollViewer x:Name="pathPartsScrollViewer" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                                  HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto"
                                                  Visibility="{Binding Path=PathPartsAsButtons, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource trueToVisibleConverter}}">
                                        <ItemsControl x:Name="pathPartsItemsControl" Margin="68,0,0,0" VerticalAlignment="Center" ItemTemplate="{StaticResource pathPartItemTemplate}">
                                            <ItemsControl.ItemsPanel>
                                                <ItemsPanelTemplate>
                                                    <WrapPanel Orientation="Horizontal" IsItemsHost="True" />
                                                </ItemsPanelTemplate>
                                            </ItemsControl.ItemsPanel>
                                        </ItemsControl>
                                    </ScrollViewer>
                                    <Border Background="{DynamicResource MaterialDesignBackground}"
                                            Margin="16,0" CornerRadius="4" HorizontalAlignment="Stretch" VerticalAlignment="Center"
                                            Visibility="{Binding Path=PathPartsAsButtons, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource falseToVisibleConverter}}">
                                        <TextBox x:Name="currentDirectoryTextBox" Foreground="{DynamicResource MaterialDesignBody}" FontSize="14" Margin="8" HorizontalAlignment="Stretch" VerticalAlignment="Center" />
                                    </Border>
                                </Grid>
                                <ItemsControl x:Name="fileSystemEntryItemsControl" Grid.Row="2" Style="{StaticResource fileSystemEntriesItemsControlStyle}"
                                              ItemTemplateSelector="{StaticResource fileSystemEntryItemTemplateSelector}" />
                                <TextBlock x:Name="emptyDirectoryTextBlock" Grid.Row="2" Style="{StaticResource emptyHintTextBlockStyle}" Text="{x:Static localization:Strings.EmptyDirectory}" />
                                <ComboBox x:Name="fileFiltersComboBox" Grid.Row="3" Style="{StaticResource fileFiltersComboBoxStyle}" />
                                <Border Grid.Row="4" MinHeight="52" BorderThickness="0,1,0,0" BorderBrush="{DynamicResource MaterialDesignDivider}" SnapsToDevicePixels="True">
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Center">
                                        <Button Style="{DynamicResource MaterialDesignFlatButton}"
                                                Content="{Binding Source={x:Static localization:Strings.Cancel}, Converter={StaticResource upperCaseConverter}}"
                                                Command="{x:Static internalCommands:FileSystemControlCommands.CancelCommand}"
                                                Margin="0,0,8,0" />
                                        <Button Style="{DynamicResource MaterialDesignFlatButton}"
                                                IsEnabled="{Binding Path=CurrentFile, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource notNullBooleanConverter}}"
                                                Content="{Binding Source={x:Static localization:Strings.Open}, Converter={StaticResource upperCaseConverter}}"
                                                Command="{x:Static internalCommands:FileSystemControlCommands.SelectFileCommand}"
                                                Margin="0,0,8,0" />
                                    </StackPanel>
                                </Border>
                            </Grid>
                        </md:DrawerHost>
                        <md:Snackbar Grid.Row="2" Grid.RowSpan="3" MessageQueue="{TemplateBinding SnackbarMessageQueue}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type controls:SaveFileControl}">
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="Background" Value="{DynamicResource MaterialDesignBackground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:SaveFileControl}">
                    <Grid>
                        <md:DrawerHost x:Name="drawerHost" LeftDrawerBackground="{TemplateBinding Background}" TopDrawerBackground="{TemplateBinding Background}"
                                       BottomDrawerBackground="{TemplateBinding Background}"
                                       HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}">
                            <md:DrawerHost.TopDrawerContent>
                                <ContentControl Content="{Binding Path=Controller, RelativeSource={RelativeSource TemplatedParent}, Mode=OneTime}"
                                                ContentTemplate="{StaticResource specialDrivesOfControllerTemplate}" />
                            </md:DrawerHost.TopDrawerContent>
                            <md:DrawerHost.LeftDrawerContent>
                                <ContentControl Content="{TemplateBinding FileSystemInfoToShow}" ContentTemplateSelector="{StaticResource fileSystemEntryInfoTemplateSelector}" Width="256" />
                            </md:DrawerHost.LeftDrawerContent>
                            <md:DrawerHost.BottomDrawerContent>
                                <!--<ContentControl Content="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:SaveFileControl}}}" ContentTemplate="{StaticResource createNewDirectoryTemplate}" />-->
                                <!-- we need some duplicate code unfortunately, because the binding will cause problems in dialogs -->
                                <StackPanel Orientation="Vertical" HorizontalAlignment="Stretch">
                                    <TextBox HorizontalAlignment="Stretch" Margin="16"
                                             Text="{Binding Path=NewDirectoryName, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                             md:HintAssist.Hint="{Binding Source={x:Static localization:Strings.NewDirectoryName}}" />
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="8,0,8,8">
                                        <Button Style="{DynamicResource MaterialDesignFlatButton}"
                                                Content="{Binding Source={x:Static localization:Strings.Cancel}, Converter={StaticResource upperCaseConverter}}"
                                                Command="{x:Static internalCommands:FileSystemControlCommands.CancelNewDirectoryCommand}" />
                                        <Button Style="{DynamicResource MaterialDesignFlatButton}"
                                                Content="{Binding Source={x:Static localization:Strings.Create}, Converter={StaticResource upperCaseConverter}}"
                                                Margin="8,0,0,0"
                                                Command="{x:Static internalCommands:FileSystemControlCommands.CreateNewDirectoryCommand}" />
                                    </StackPanel>
                                </StackPanel>
                            </md:DrawerHost.BottomDrawerContent>
                            <Grid Background="{TemplateBinding Background}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="100*" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <DockPanel Background="{DynamicResource PrimaryHueMidBrush}" TextBlock.Foreground="{DynamicResource PrimaryHueMidForegroundBrush}"
                                           Height="64">
                                    <StackPanel DockPanel.Dock="Right" Orientation="Horizontal">
                                        <Button Style="{DynamicResource MaterialDesignToolForegroundButton}" Margin="0,0,8,0"
                                                Visibility="{Binding Path=SwitchPathPartsAsButtonsEnabled, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource trueToVisibleConverter}}"
                                                Command="{x:Static internalCommands:FileSystemControlCommands.SwitchPathPartsAsButtonsCommand}">
                                            <md:PackIcon Kind="FormTextbox" Height="24" Width="24" HorizontalAlignment="Center" VerticalAlignment="Center"
                                                         Foreground="{DynamicResource PrimaryHueMidForegroundBrush}" />
                                        </Button>
                                        <Button Style="{DynamicResource MaterialDesignToolForegroundButton}" Margin="0,0,8,0"
                                                Command="{x:Static internalCommands:FileSystemControlCommands.OpenSpecialDirectoriesDrawerCommand}">
                                            <md:PackIcon Kind="DotsVertical" Height="24" Width="24" HorizontalAlignment="Center" VerticalAlignment="Center"
                                                         Foreground="{DynamicResource PrimaryHueMidForegroundBrush}" />
                                        </Button>
                                    </StackPanel>
                                    <TextBlock FontSize="20" Margin="72,0,16,0"
                                               Text="{x:Static localization:Strings.SaveFile}" VerticalAlignment="Center" />
                                </DockPanel>
                                <Grid Grid.Row="1" MinHeight="64" MaxHeight="128"
                                        Background="{DynamicResource PrimaryHueMidBrush}" TextBlock.Foreground="{DynamicResource PrimaryHueMidForegroundBrush}">
                                    <Grid.Style>
                                        <Style TargetType="Grid">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Path=PathPartsAsButtons, RelativeSource={RelativeSource TemplatedParent}}" Value="False">
                                                    <Setter Property="Height" Value="64" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Path=PathPartsAsButtons, RelativeSource={RelativeSource TemplatedParent}}" Value="True">
                                                    <Setter Property="MinHeight" Value="64" />
                                                    <Setter Property="MaxHeight" Value="128" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Grid.Style>
                                    <ScrollViewer x:Name="pathPartsScrollViewer" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                                  HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto"
                                                  Visibility="{Binding Path=PathPartsAsButtons, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource trueToVisibleConverter}}">
                                        <ItemsControl x:Name="pathPartsItemsControl" Margin="68,0,0,0" VerticalAlignment="Center" ItemTemplate="{StaticResource pathPartItemTemplate}">
                                            <ItemsControl.ItemsPanel>
                                                <ItemsPanelTemplate>
                                                    <WrapPanel Orientation="Horizontal" IsItemsHost="True" />
                                                </ItemsPanelTemplate>
                                            </ItemsControl.ItemsPanel>
                                        </ItemsControl>
                                    </ScrollViewer>
                                    <Border Background="{DynamicResource MaterialDesignBackground}"
                                            Margin="16,0" CornerRadius="4" HorizontalAlignment="Stretch" VerticalAlignment="Center"
                                            Visibility="{Binding Path=PathPartsAsButtons, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource falseToVisibleConverter}}">
                                        <TextBox x:Name="currentDirectoryTextBox" Foreground="{DynamicResource MaterialDesignBody}" FontSize="14" Margin="8" HorizontalAlignment="Stretch" VerticalAlignment="Center" />
                                    </Border>
                                </Grid>
                                <ItemsControl x:Name="fileSystemEntryItemsControl" Grid.Row="2" Style="{StaticResource fileSystemEntriesItemsControlStyle}"
                                              ItemTemplateSelector="{StaticResource fileSystemEntryItemTemplateSelector}" />
                                <TextBlock x:Name="emptyDirectoryTextBlock" Grid.Row="2" Style="{StaticResource emptyHintTextBlockStyle}" Text="{x:Static localization:Strings.EmptyDirectory}" />
                                <DockPanel Grid.Row="3" HorizontalAlignment="Stretch">
                                    <ComboBox x:Name="fileFiltersComboBox" DockPanel.Dock="Right" Style="{StaticResource fileFiltersComboBoxStyle}" Margin="0,16,16,16" />
                                    <TextBox x:Name="filenameTextBox" HorizontalAlignment="Stretch" Margin="16"
                                             Text="{Binding Path=Filename, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                </DockPanel>
                                <Border Grid.Row="4" MinHeight="52" BorderThickness="0,1,0,0" BorderBrush="{DynamicResource MaterialDesignDivider}" SnapsToDevicePixels="True">
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Center">
                                        <Button Style="{DynamicResource MaterialDesignFlatButton}"
                                                Content="{Binding Source={x:Static localization:Strings.Cancel}, Converter={StaticResource upperCaseConverter}}"
                                                Command="{x:Static internalCommands:FileSystemControlCommands.CancelCommand}"
                                                Margin="0,0,8,0" />
                                        <Button Style="{DynamicResource MaterialDesignFlatButton}"
                                                IsEnabled="{Binding Path=CurrentFile, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource notNullBooleanConverter}}"
                                                Content="{Binding Source={x:Static localization:Strings.Save}, Converter={StaticResource upperCaseConverter}}"
                                                Command="{x:Static internalCommands:FileSystemControlCommands.SelectFileCommand}"
                                                Margin="0,0,8,0" />
                                    </StackPanel>
                                </Border>
                                <Button Grid.Row="1" Style="{StaticResource showCreateNewDirectoryButtonStyle}" Command="{x:Static internalCommands:FileSystemControlCommands.ShowCreateNewDirectoryCommand}" />
                            </Grid>
                        </md:DrawerHost>
                        <md:Snackbar Grid.Row="2" Grid.RowSpan="3" MessageQueue="{TemplateBinding SnackbarMessageQueue}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type controls:OpenMultipleDirectoriesControl}">
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="Background" Value="{DynamicResource MaterialDesignBackground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:OpenMultipleDirectoriesControl}">
                    <Grid>
                        <md:DrawerHost x:Name="drawerHost" LeftDrawerBackground="{TemplateBinding Background}" TopDrawerBackground="{TemplateBinding Background}"
                                       BottomDrawerBackground="{TemplateBinding Background}" RightDrawerBackground="{TemplateBinding Background}"
                                       HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}">
                            <md:DrawerHost.TopDrawerContent>
                                <ContentControl Content="{Binding Path=Controller, RelativeSource={RelativeSource TemplatedParent}, Mode=OneTime}"
                                                ContentTemplate="{StaticResource specialDrivesOfControllerTemplate}" />
                            </md:DrawerHost.TopDrawerContent>
                            <md:DrawerHost.LeftDrawerContent>
                                <ContentControl Content="{TemplateBinding FileSystemInfoToShow}" ContentTemplateSelector="{StaticResource fileSystemEntryInfoTemplateSelector}" Width="256" />
                            </md:DrawerHost.LeftDrawerContent>
                            <md:DrawerHost.BottomDrawerContent>
                                <!--<ContentControl Content="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:OpenDirectoryControl}}}" ContentTemplate="{StaticResource createNewDirectoryTemplate}" />-->
                                <!-- we need some duplicate code unfortunately, because the binding will cause problems in dialogs -->
                                <StackPanel Orientation="Vertical" HorizontalAlignment="Stretch">
                                    <TextBox HorizontalAlignment="Stretch" Margin="16"
                                             Text="{Binding Path=NewDirectoryName, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                             md:HintAssist.Hint="{Binding Source={x:Static localization:Strings.NewDirectoryName}}" />
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="8,0,8,8">
                                        <Button Style="{DynamicResource MaterialDesignFlatButton}"
                                                Content="{Binding Source={x:Static localization:Strings.Cancel}, Converter={StaticResource upperCaseConverter}}"
                                                Command="{x:Static internalCommands:FileSystemControlCommands.CancelNewDirectoryCommand}" />
                                        <Button Style="{DynamicResource MaterialDesignFlatButton}"
                                                Content="{Binding Source={x:Static localization:Strings.Create}, Converter={StaticResource upperCaseConverter}}"
                                                Margin="8,0,0,0"
                                                Command="{x:Static internalCommands:FileSystemControlCommands.CreateNewDirectoryCommand}" />
                                    </StackPanel>
                                </StackPanel>
                            </md:DrawerHost.BottomDrawerContent>
                            <md:DrawerHost.RightDrawerContent>
                                <Border MinWidth="300">
                                    <StackPanel HorizontalAlignment="Stretch">
                                        <TextBlock FontSize="14" FontWeight="Medium" Foreground="{DynamicResource MaterialDesignBodyLight}"
                                                   Text="{x:Static localization:Strings.Selection}"
                                                   Margin="72,16,0,0" />
                                        <ItemsControl x:Name="selectionItemsControl" Style="{StaticResource selectionItemsControlStyle}"
                                                      ItemTemplate="{StaticResource directoryInfoMultipleSelectionTemplate}" />
                                        <TextBlock x:Name="emptySelectionTextBlock" Style="{StaticResource emptyHintTextBlockStyle}" Text="{x:Static localization:Strings.NoSelectedDirectories}" />
                                    </StackPanel>
                                </Border>
                            </md:DrawerHost.RightDrawerContent>
                            <Grid Background="{TemplateBinding Background}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="100*" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <DockPanel Background="{DynamicResource PrimaryHueMidBrush}" TextBlock.Foreground="{DynamicResource PrimaryHueMidForegroundBrush}"
                                           Height="64">
                                    <StackPanel DockPanel.Dock="Right" Orientation="Horizontal">
                                        <Button Style="{DynamicResource MaterialDesignToolForegroundButton}" Margin="0,0,8,0"
                                                Visibility="{Binding Path=SwitchPathPartsAsButtonsEnabled, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource trueToVisibleConverter}}"
                                                Command="{x:Static internalCommands:FileSystemControlCommands.SwitchPathPartsAsButtonsCommand}">
                                            <md:PackIcon Kind="FormTextbox" Height="24" Width="24" HorizontalAlignment="Center" VerticalAlignment="Center"
                                                         Foreground="{DynamicResource PrimaryHueMidForegroundBrush}" />
                                        </Button>
                                        <Button Style="{DynamicResource MaterialDesignToolForegroundButton}" Margin="0,0,8,0"
                                                ToolTip="{x:Static localization:Strings.Selection}"
                                                Command="{x:Static internalCommands:FileSystemControlCommands.OpenSelectionDrawerCommand}">
                                            <md:PackIcon Kind="FormatListBulletedSquare" Height="24" Width="24" HorizontalAlignment="Center" VerticalAlignment="Center"
                                                             Foreground="{DynamicResource PrimaryHueMidForegroundBrush}" />
                                        </Button>
                                        <Button Style="{DynamicResource MaterialDesignToolForegroundButton}" Margin="0,0,8,0"
                                                Command="{x:Static internalCommands:FileSystemControlCommands.OpenSpecialDirectoriesDrawerCommand}">
                                            <md:PackIcon Kind="DotsVertical" Height="24" Width="24" HorizontalAlignment="Center" VerticalAlignment="Center"
                                                         Foreground="{DynamicResource PrimaryHueMidForegroundBrush}" />
                                        </Button>
                                    </StackPanel>
                                    <TextBlock FontSize="20" Margin="72,0,16,0"
                                               Text="{x:Static localization:Strings.SelectDirectory}" VerticalAlignment="Center" />
                                </DockPanel>
                                <Grid Grid.Row="1" MinHeight="64" MaxHeight="128"
                                        Background="{DynamicResource PrimaryHueMidBrush}" TextBlock.Foreground="{DynamicResource PrimaryHueMidForegroundBrush}">
                                    <Grid.Style>
                                        <Style TargetType="Grid">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Path=PathPartsAsButtons, RelativeSource={RelativeSource TemplatedParent}}" Value="False">
                                                    <Setter Property="Height" Value="64" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Path=PathPartsAsButtons, RelativeSource={RelativeSource TemplatedParent}}" Value="True">
                                                    <Setter Property="MinHeight" Value="64" />
                                                    <Setter Property="MaxHeight" Value="128" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Grid.Style>
                                    <ScrollViewer x:Name="pathPartsScrollViewer" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                                  HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto"
                                                  Visibility="{Binding Path=PathPartsAsButtons, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource trueToVisibleConverter}}">
                                        <ItemsControl x:Name="pathPartsItemsControl" Margin="68,0,0,0" VerticalAlignment="Center" ItemTemplate="{StaticResource pathPartItemTemplate}">
                                            <ItemsControl.ItemsPanel>
                                                <ItemsPanelTemplate>
                                                    <WrapPanel Orientation="Horizontal" IsItemsHost="True" />
                                                </ItemsPanelTemplate>
                                            </ItemsControl.ItemsPanel>
                                        </ItemsControl>
                                    </ScrollViewer>
                                    <Border Background="{DynamicResource MaterialDesignBackground}"
                                            Margin="16,0" CornerRadius="4" HorizontalAlignment="Stretch" VerticalAlignment="Center"
                                            Visibility="{Binding Path=PathPartsAsButtons, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource falseToVisibleConverter}}">
                                        <TextBox x:Name="currentDirectoryTextBox" Foreground="{DynamicResource MaterialDesignBody}" FontSize="14" Margin="8" HorizontalAlignment="Stretch" VerticalAlignment="Center" />
                                    </Border>
                                </Grid>
                                <ItemsControl x:Name="fileSystemEntryItemsControl" Grid.Row="2" Style="{StaticResource fileSystemEntriesItemsControlStyle}"
                                              ItemTemplate="{StaticResource directoryInfoItemMultipleTemplate}" />
                                <TextBlock x:Name="emptyDirectoryTextBlock" Grid.Row="2" Style="{StaticResource emptyHintTextBlockStyle}" Text="{x:Static localization:Strings.EmptyDirectory}" />
                                <Border Grid.Row="3" MinHeight="52" BorderThickness="0,1,0,0" BorderBrush="{DynamicResource MaterialDesignDivider}" SnapsToDevicePixels="True">
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Center">
                                        <Button Style="{DynamicResource MaterialDesignFlatButton}"
                                                Content="{Binding Source={x:Static localization:Strings.Cancel}, Converter={StaticResource upperCaseConverter}}"
                                                Command="{x:Static internalCommands:FileSystemControlCommands.CancelCommand}"
                                                Margin="0,0,8,0" />
                                        <Button Style="{DynamicResource MaterialDesignFlatButton}"
                                                IsEnabled="{Binding Path=CurrentDirectory, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource notNullBooleanConverter}}"
                                                Content="{Binding Source={x:Static localization:Strings.Select}, Converter={StaticResource upperCaseConverter}}"
                                                Command="{x:Static internalCommands:FileSystemControlCommands.SelectMultipleDirectoriesCommand}"
                                                Margin="0,0,8,0" />
                                    </StackPanel>
                                </Border>
                                <Button Grid.Row="1" Style="{StaticResource showCreateNewDirectoryButtonStyle}" Command="{x:Static internalCommands:FileSystemControlCommands.ShowCreateNewDirectoryCommand}" />
                            </Grid>
                        </md:DrawerHost>
                        <md:Snackbar Grid.Row="2" Grid.RowSpan="2" MessageQueue="{TemplateBinding SnackbarMessageQueue}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type controls:OpenMultipleFilesControl}">
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="Background" Value="{DynamicResource MaterialDesignBackground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:OpenMultipleFilesControl}">
                    <Grid>
                        <md:DrawerHost x:Name="drawerHost" LeftDrawerBackground="{TemplateBinding Background}" TopDrawerBackground="{TemplateBinding Background}"
                                       RightDrawerBackground="{TemplateBinding Background}"
                                       HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}">
                            <md:DrawerHost.TopDrawerContent>
                                <ContentControl Content="{Binding Path=Controller, RelativeSource={RelativeSource TemplatedParent}, Mode=OneTime}"
                                                ContentTemplate="{StaticResource specialDrivesOfControllerTemplate}" />
                            </md:DrawerHost.TopDrawerContent>
                            <md:DrawerHost.LeftDrawerContent>
                                <ContentControl Content="{TemplateBinding FileSystemInfoToShow}" ContentTemplateSelector="{StaticResource fileSystemEntryInfoTemplateSelector}" Width="256" />
                            </md:DrawerHost.LeftDrawerContent>
                            <!-- opening a file does not require the feature to create a new directory -->
                            <md:DrawerHost.RightDrawerContent>
                                <Border MinWidth="300">
                                    <StackPanel HorizontalAlignment="Stretch">
                                        <TextBlock FontSize="14" FontWeight="Medium" Foreground="{DynamicResource MaterialDesignBodyLight}"
                                                   Text="{x:Static localization:Strings.Selection}"
                                                   Margin="72,16,0,0" />
                                        <ItemsControl x:Name="selectionItemsControl" Style="{StaticResource selectionItemsControlStyle}"
                                                      ItemTemplate="{StaticResource fileInfoMultipleSelectionTemplate}" />
                                        <TextBlock x:Name="emptySelectionTextBlock" Style="{StaticResource emptyHintTextBlockStyle}" Text="{x:Static localization:Strings.NoSelectedFiles}" />
                                    </StackPanel>
                                </Border>
                            </md:DrawerHost.RightDrawerContent>
                            <Grid Background="{TemplateBinding Background}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="100*" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <DockPanel Background="{DynamicResource PrimaryHueMidBrush}" TextBlock.Foreground="{DynamicResource PrimaryHueMidForegroundBrush}"
                                           Height="64">
                                    <StackPanel DockPanel.Dock="Right" Orientation="Horizontal">
                                        <Button Style="{DynamicResource MaterialDesignToolForegroundButton}" Margin="0,0,8,0"
                                                Visibility="{Binding Path=SwitchPathPartsAsButtonsEnabled, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource trueToVisibleConverter}}"
                                                Command="{x:Static internalCommands:FileSystemControlCommands.SwitchPathPartsAsButtonsCommand}">
                                            <md:PackIcon Kind="FormTextbox" Height="24" Width="24" HorizontalAlignment="Center" VerticalAlignment="Center"
                                                         Foreground="{DynamicResource PrimaryHueMidForegroundBrush}" />
                                        </Button>
                                        <Button Style="{DynamicResource MaterialDesignToolForegroundButton}" Margin="0,0,8,0"
                                                ToolTip="{x:Static localization:Strings.Selection}"
                                                Command="{x:Static internalCommands:FileSystemControlCommands.OpenSelectionDrawerCommand}">
                                            <md:PackIcon Kind="FormatListBulletedSquare" Height="24" Width="24" HorizontalAlignment="Center" VerticalAlignment="Center"
                                                         Foreground="{DynamicResource PrimaryHueMidForegroundBrush}" />
                                        </Button>
                                        <Button Style="{DynamicResource MaterialDesignToolForegroundButton}" Margin="0,0,8,0"
                                                Command="{x:Static internalCommands:FileSystemControlCommands.OpenSpecialDirectoriesDrawerCommand}">
                                            <md:PackIcon Kind="DotsVertical" Height="24" Width="24" HorizontalAlignment="Center" VerticalAlignment="Center"
                                                         Foreground="{DynamicResource PrimaryHueMidForegroundBrush}" />
                                        </Button>
                                    </StackPanel>
                                    <TextBlock FontSize="20" Margin="72,0,16,0"
                                               Text="{x:Static localization:Strings.OpenFile}" VerticalAlignment="Center" />
                                </DockPanel>
                                <Grid Grid.Row="1" MinHeight="64" MaxHeight="128"
                                        Background="{DynamicResource PrimaryHueMidBrush}" TextBlock.Foreground="{DynamicResource PrimaryHueMidForegroundBrush}">
                                    <Grid.Style>
                                        <Style TargetType="Grid">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Path=PathPartsAsButtons, RelativeSource={RelativeSource TemplatedParent}}" Value="False">
                                                    <Setter Property="Height" Value="64" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Path=PathPartsAsButtons, RelativeSource={RelativeSource TemplatedParent}}" Value="True">
                                                    <Setter Property="MinHeight" Value="64" />
                                                    <Setter Property="MaxHeight" Value="128" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Grid.Style>
                                    <ScrollViewer x:Name="pathPartsScrollViewer" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                                  HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto"
                                                  Visibility="{Binding Path=PathPartsAsButtons, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource trueToVisibleConverter}}">
                                        <ItemsControl x:Name="pathPartsItemsControl" Margin="68,0,0,0" VerticalAlignment="Center" ItemTemplate="{StaticResource pathPartItemTemplate}">
                                            <ItemsControl.ItemsPanel>
                                                <ItemsPanelTemplate>
                                                    <WrapPanel Orientation="Horizontal" IsItemsHost="True" />
                                                </ItemsPanelTemplate>
                                            </ItemsControl.ItemsPanel>
                                        </ItemsControl>
                                    </ScrollViewer>
                                    <Border Background="{DynamicResource MaterialDesignBackground}"
                                            Margin="16,0" CornerRadius="4" HorizontalAlignment="Stretch" VerticalAlignment="Center"
                                            Visibility="{Binding Path=PathPartsAsButtons, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource falseToVisibleConverter}}">
                                        <TextBox x:Name="currentDirectoryTextBox" Foreground="{DynamicResource MaterialDesignBody}" FontSize="14" Margin="8" HorizontalAlignment="Stretch" VerticalAlignment="Center" />
                                    </Border>
                                </Grid>
                                <ItemsControl x:Name="fileSystemEntryItemsControl" Grid.Row="2" Style="{StaticResource fileSystemEntriesItemsControlStyle}"
                                              ItemTemplateSelector="{StaticResource fileSystemEntryItemMultipleTemplateSelector}" />
                                <TextBlock x:Name="emptyDirectoryTextBlock" Grid.Row="2" Style="{StaticResource emptyHintTextBlockStyle}" Text="{x:Static localization:Strings.EmptyDirectory}" />
                                <ComboBox x:Name="fileFiltersComboBox" Grid.Row="3" Style="{StaticResource fileFiltersComboBoxMultipleControlStyle}" />
                                <Border Grid.Row="4" MinHeight="52" BorderThickness="0,1,0,0" BorderBrush="{DynamicResource MaterialDesignDivider}" SnapsToDevicePixels="True">
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Center">
                                        <Button Style="{DynamicResource MaterialDesignFlatButton}"
                                                Content="{Binding Source={x:Static localization:Strings.Cancel}, Converter={StaticResource upperCaseConverter}}"
                                                Command="{x:Static internalCommands:FileSystemControlCommands.CancelCommand}"
                                                Margin="0,0,8,0" />
                                        <Button Style="{DynamicResource MaterialDesignFlatButton}"
                                                IsEnabled="{Binding Path=CurrentFile, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource notNullBooleanConverter}}"
                                                Content="{Binding Source={x:Static localization:Strings.Open}, Converter={StaticResource upperCaseConverter}}"
                                                Command="{x:Static internalCommands:FileSystemControlCommands.SelectMultipleFilesCommand}"
                                                Margin="0,0,8,0" />
                                    </StackPanel>
                                </Border>
                            </Grid>
                        </md:DrawerHost>
                        <md:Snackbar Grid.Row="2" Grid.RowSpan="3" MessageQueue="{TemplateBinding SnackbarMessageQueue}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>