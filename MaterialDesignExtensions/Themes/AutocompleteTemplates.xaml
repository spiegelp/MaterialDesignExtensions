<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"
                    xmlns:controls="clr-namespace:MaterialDesignExtensions.Controls"
                    xmlns:converters="clr-namespace:MaterialDesignExtensions.Converters"
                    xmlns:internalCommands="clr-namespace:MaterialDesignExtensions.Commands.Internal">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Shadows.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.TextBox.xaml" />
        <ResourceDictionary>
            <md:BrushRoundConverter x:Key="brushRoundConverter"/>
        </ResourceDictionary>
    </ResourceDictionary.MergedDictionaries>

    <converters:BooleanOrConverter x:Key="booleanOrConverter" />
    <converters:NullToVisibilityConverter x:Key="nullToVisibleConverter" NullValue="Visible" NotNullValue="Hidden" />
    <converters:NullToVisibilityConverter x:Key="notNullToVisibleConverter" NullValue="Collapsed" NotNullValue="Visible" />
    <converters:EmptyEnumerableToBoolConverter x:Key="emptyEnumerableToFalseConverter" EmptyValue="False" />

    <Style x:Key="MaterialDesignAutocomplete" TargetType="{x:Type controls:Autocomplete}">
        <Setter Property="Background" Value="{DynamicResource MaterialDesignBackground}" />
        <Setter Property="FontSize" Value="20" />
        <Setter Property="Padding" Value="16,8,8,8" />
        <Setter Property="ClearIconSize" Value="24" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="md:ShadowAssist.ShadowDepth" Value="Depth1" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:Autocomplete}">
                    <Grid HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}"
                          Height="{TemplateBinding Height}" Width="{TemplateBinding Width}">
                        <Border x:Name="rootBorder" Background="{TemplateBinding Background}"
                                SnapsToDevicePixels="True"
                                HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                            <Border.Style>
                                <Style TargetType="Border">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=IsOpen, ElementName=autocompleteItemsPopup}" Value="False">
                                            <Setter Property="BorderThickness" Value="1" />
                                            <Setter Property="CornerRadius" Value="2" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=IsOpen, ElementName=autocompleteItemsPopup}" Value="True">
                                            <Setter Property="BorderThickness" Value="1,1,1,0" />
                                            <Setter Property="CornerRadius" Value="2,2,0,0" />
                                        </DataTrigger>
                                        <DataTrigger Value="False">
                                            <DataTrigger.Binding>
                                                <MultiBinding Converter="{StaticResource booleanOrConverter}">
                                                    <Binding Path="IsMouseOver" ElementName="rootBorder" />
                                                    <Binding Path="IsKeyboardFocused" ElementName="searchTextBox" />
                                                </MultiBinding>
                                            </DataTrigger.Binding>
                                            <Setter Property="BorderBrush" Value="{DynamicResource MaterialDesignDivider}" />
                                        </DataTrigger>
                                        <DataTrigger Value="True">
                                            <DataTrigger.Binding>
                                                <MultiBinding Converter="{StaticResource booleanOrConverter}">
                                                    <Binding Path="IsMouseOver" ElementName="rootBorder" />
                                                    <Binding Path="IsKeyboardFocused" ElementName="searchTextBox" />
                                                </MultiBinding>
                                            </DataTrigger.Binding>
                                            <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueMidBrush}" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="{TemplateBinding Padding}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="100*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <TextBox x:Name="searchTextBox" md:HintAssist.Hint="{TemplateBinding Hint}"
                                         Text="{Binding Path=SearchTerm, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource TemplatedParent}}"
                                         FontSize="{TemplateBinding FontSize}" BorderBrush="Transparent"
                                         Margin="0,0,8,0" HorizontalAlignment="Stretch" VerticalAlignment="Center"
                                         Visibility="{TemplateBinding SelectedItem, Converter={StaticResource nullToVisibleConverter}}" />
                                <ContentControl Content="{TemplateBinding SelectedItem}" ContentTemplate="{TemplateBinding ItemTemplate}"
                                                Margin="0,0,8,0" HorizontalAlignment="Stretch" VerticalAlignment="Center"
                                                Visibility="{TemplateBinding SelectedItem, Converter={StaticResource notNullToVisibleConverter}}" />
                                <Button x:Name="clearButton" Grid.Column="1" Cursor="Hand" SnapsToDevicePixels="True"
                                        Margin="16,0,0,0" Padding="8,0,8,0" VerticalAlignment="Stretch" MaxHeight="52">
                                    <!-- visibility will be set via code -->
                                    <Button.Style>
                                        <Style TargetType="{x:Type Button}">
                                            <Setter Property="Background" Value="Transparent" />
                                            <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}" />
                                            <Setter Property="BorderThickness" Value="0" />
                                            <Setter Property="md:RippleAssist.Feedback" Value="{DynamicResource MaterialDesignFlatButtonRipple}" />
                                            <Setter Property="md:RippleAssist.ClipToBounds" Value="True" />
                                            <Setter Property="HorizontalAlignment" Value="Stretch" />
                                            <Setter Property="VerticalAlignment" Value="Stretch" />
                                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                            <Setter Property="VerticalContentAlignment" Value="Stretch" />
                                            <Setter Property="SnapsToDevicePixels" Value="True" />
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="Button">
                                                        <md:Ripple Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                       Focusable="False"
                                                                       HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                       VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                       Padding="{TemplateBinding Padding}"
                                                                       SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </Button.Style>
                                    <md:PackIcon Kind="Close" Width="{TemplateBinding ClearIconSize}" Height="{TemplateBinding ClearIconSize}"
                                                     HorizontalAlignment="Center" VerticalAlignment="Center" />
                                </Button>
                                <controls:AutocompletePopup x:Name="autocompleteItemsPopup"
                                       PlacementTarget="{Binding ElementName=rootBorder}"
                                       Placement="Bottom"
                                       PopupAnimation="Fade" AllowsTransparency="True" Focusable="False"
                                       SnapsToDevicePixels="True"
                                       MaxHeight="300" Width="{Binding Path=ActualWidth, ElementName=rootBorder}">
                                    <controls:AutocompletePopup.Style>
                                        <Style TargetType="{x:Type Popup}">
                                            <Style.Triggers>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding Path=ItemsSource, ElementName=autocompleteItemsControl, Converter={StaticResource emptyEnumerableToFalseConverter}}" Value="True" />
                                                        <Condition Binding="{Binding Path=IsKeyboardFocusWithin, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type controls:Autocomplete}}}" Value="True" />
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="IsOpen" Value="True" />
                                                </MultiDataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </controls:AutocompletePopup.Style>
                                    <Border HorizontalAlignment="Stretch">
                                        <!-- Effect="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(md:ShadowAssist.ShadowDepth), Converter={x:Static md:ShadowConverter.Instance}}" -->
                                        <Border Background="{TemplateBinding Background}" BorderBrush="{Binding Path=BorderBrush, ElementName=rootBorder}"
                                                BorderThickness="1,0,1,1" CornerRadius="0,0,2,2" SnapsToDevicePixels="True"
                                                HorizontalAlignment="Stretch">
                                            <ItemsControl x:Name="autocompleteItemsControl" IsEnabled="{TemplateBinding IsEnabled}"
                                                          Margin="0,4,0,4"
                                                          HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                                          VirtualizingStackPanel.IsVirtualizing="True"
                                                          ScrollViewer.CanContentScroll="True"
                                                          ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.VerticalScrollBarVisibility="Auto">
                                                <ItemsControl.Template>
                                                    <ControlTemplate TargetType="{x:Type ItemsControl}">
                                                        <Border SnapsToDevicePixels="True">
                                                            <ScrollViewer Focusable="False">
                                                                <ItemsPresenter SnapsToDevicePixels="True" />
                                                            </ScrollViewer>
                                                        </Border>
                                                    </ControlTemplate>
                                                </ItemsControl.Template>
                                                <ItemsControl.ItemsPanel>
                                                    <ItemsPanelTemplate>
                                                        <VirtualizingStackPanel IsItemsHost="True" Orientation="Vertical" />
                                                    </ItemsPanelTemplate>
                                                </ItemsControl.ItemsPanel>
                                                <ItemsControl.ItemTemplate>
                                                    <DataTemplate>
                                                        <Grid Background="Transparent" HorizontalAlignment="Stretch" MinHeight="56">
                                                            <Border Background="{Binding Path=Foreground, Converter={StaticResource brushRoundConverter}, ElementName=itemButton}"
                                                                    HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                                                <Border.Style>
                                                                    <Style TargetType="{x:Type Border}">
                                                                        <Style.Triggers>
                                                                            <DataTrigger Value="True">
                                                                                <DataTrigger.Binding>
                                                                                    <MultiBinding Converter="{StaticResource booleanOrConverter}">
                                                                                        <Binding Path="IsMouseOver" RelativeSource="{RelativeSource AncestorType={x:Type Grid}}" />
                                                                                        <Binding Path="IsKeyboardFocusWithin" RelativeSource="{RelativeSource AncestorType={x:Type Grid}}" />
                                                                                    </MultiBinding>
                                                                                </DataTrigger.Binding>
                                                                                <Setter Property="Opacity" Value="0.1" />
                                                                            </DataTrigger>
                                                                            <DataTrigger Value="False">
                                                                                <DataTrigger.Binding>
                                                                                    <MultiBinding Converter="{StaticResource booleanOrConverter}">
                                                                                        <Binding Path="IsMouseOver" RelativeSource="{RelativeSource AncestorType={x:Type Grid}}" />
                                                                                        <Binding Path="IsKeyboardFocusWithin" RelativeSource="{RelativeSource AncestorType={x:Type Grid}}" />
                                                                                    </MultiBinding>
                                                                                </DataTrigger.Binding>
                                                                                <Setter Property="Opacity" Value="0" />
                                                                            </DataTrigger>
                                                                        </Style.Triggers>
                                                                    </Style>
                                                                </Border.Style>
                                                            </Border>
                                                            <Button x:Name="itemButton" Content="{Binding}"
                                                                    ContentTemplate="{Binding Path=ItemTemplate, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:Autocomplete}}}"
                                                                    Padding="16,8,16,8"
                                                                    Command="{x:Static internalCommands:AutocompleteCommands.SelectAutocompleteItemCommand}" CommandParameter="{Binding}">
                                                                <Button.Style>
                                                                    <Style TargetType="{x:Type Button}">
                                                                        <Setter Property="Background" Value="Transparent" />
                                                                        <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}" />
                                                                        <Setter Property="BorderThickness" Value="0" />
                                                                        <Setter Property="Padding" Value="8" />
                                                                        <Setter Property="md:RippleAssist.Feedback" Value="{DynamicResource MaterialDesignFlatButtonRipple}" />
                                                                        <Setter Property="md:RippleAssist.ClipToBounds" Value="True" />
                                                                        <Setter Property="HorizontalAlignment" Value="Stretch" />
                                                                        <Setter Property="VerticalAlignment" Value="Stretch" />
                                                                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                                                        <Setter Property="VerticalContentAlignment" Value="Stretch" />
                                                                        <Setter Property="SnapsToDevicePixels" Value="True" />
                                                                        <Setter Property="Template">
                                                                            <Setter.Value>
                                                                                <ControlTemplate TargetType="Button">
                                                                                    <md:Ripple Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                                                   Focusable="False"
                                                                                                   HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                                                   VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                                                   Padding="{TemplateBinding Padding}"
                                                                                                   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                                                </ControlTemplate>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                    </Style>
                                                                </Button.Style>
                                                            </Button>
                                                        </Grid>
                                                    </DataTemplate>
                                                </ItemsControl.ItemTemplate>
                                            </ItemsControl>
                                        </Border>
                                    </Border>
                                </controls:AutocompletePopup>
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MaterialDesignAutocompleteDense" TargetType="{x:Type controls:Autocomplete}" BasedOn="{StaticResource MaterialDesignAutocomplete}">
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Padding" Value="8,2,0,2" />
        <Setter Property="ClearIconSize" Value="12" />
    </Style>

    <Style TargetType="{x:Type controls:Autocomplete}" BasedOn="{StaticResource MaterialDesignAutocomplete}" />

</ResourceDictionary>