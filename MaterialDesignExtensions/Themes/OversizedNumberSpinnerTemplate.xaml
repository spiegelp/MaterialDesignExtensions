<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:wpf="http://materialdesigninxaml.net/winfx/xaml/themes"
                    xmlns:controls="clr-namespace:MaterialDesignExtensions.Controls"
                    xmlns:internalCommands="clr-namespace:MaterialDesignExtensions.Commands.Internal">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.TextBox.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Shadows.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="{x:Type Button}" x:Key="MaterialDesignOverSizedNumberSpinnerButton">
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
    </Style>

    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MaterialDesignOverSizedNumberSpinnerButton}" x:Key="MaterialDesignOverSizedNumberSpinnerPlusButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" CornerRadius="5,5,0,0">
                        <wpf:Ripple Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" Focusable="False" Feedback="White"
                                    HorizontalContentAlignment="Center" VerticalContentAlignment="Top"
                                    Padding="{TemplateBinding Padding}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MaterialDesignOverSizedNumberSpinnerButton}" x:Key="MaterialDesignOverSizedNumberSpinnerMinusButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" CornerRadius="0,0,5,5">
                        <wpf:Ripple Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" Focusable="False" Feedback="White"
                                    HorizontalContentAlignment="Center" VerticalContentAlignment="Bottom"
                                    Padding="{TemplateBinding Padding}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="MaterialDesignOverSizedNumberSpinnerValueButton">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type controls:OversizedNumberSpinner}">
        <Setter Property="Height" Value="70" />
        <Setter Property="Width" Value="55" />
        <Setter Property="ClipToBounds" Value="False" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidForegroundBrush}" />
        <Setter Property="Background" Value="{DynamicResource PrimaryHueMidBrush}" />
        <Setter Property="wpf:ShadowAssist.ShadowDepth" Value="Depth1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:OversizedNumberSpinner}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="PlusAnimation">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ValueTextBlock" Storyboard.TargetProperty="FontSize">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="26" />
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="20" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="MinusAnimation">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ValueTextBlock" Storyboard.TargetProperty="FontSize">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="14" />
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="20" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                        <Grid.Style>
                            <Style TargetType="{x:Type Grid}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsEnabled}" Value="False">
                                        <Setter Property="Opacity" Value="0.75" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsEnabled}" Value="True">
                                        <Setter Property="Opacity" Value="1" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Grid.Style>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="25*" />
                            <RowDefinition Height="25*" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="25*" />
                            <RowDefinition Height="25*" />
                        </Grid.RowDefinitions>
                        <Border Grid.Row="2" Background="{DynamicResource MaterialDesignSeperator}" SnapsToDevicePixels="True" HorizontalAlignment="Stretch" Height="1" />
                        <Button Grid.RowSpan="2" Style="{StaticResource MaterialDesignOverSizedNumberSpinnerPlusButton}"
                                Background="{TemplateBinding Background}"
                                Command="{x:Static internalCommands:OversizedNumberSpinnerCommands.PlusCommand}">
                            <wpf:PackIcon Kind="ChevronUp" Foreground="{TemplateBinding Foreground}" Width="30" Height="30" />
                            <Button.Triggers>
                                <EventTrigger RoutedEvent="Button.Click">
                                    <BeginStoryboard Storyboard="{StaticResource PlusAnimation}" />
                                </EventTrigger>
                            </Button.Triggers>
                        </Button>
                        <Button Grid.Row="3" Grid.RowSpan="2" x:Name="PlusButton" Style="{StaticResource MaterialDesignOverSizedNumberSpinnerMinusButton}"
                                Background="{TemplateBinding Background}"
                                Command="{x:Static internalCommands:OversizedNumberSpinnerCommands.MinusCommand}">
                            <wpf:PackIcon Kind="ChevronDown" Foreground="{TemplateBinding Foreground}" Width="30" Height="30" />
                            <Button.Triggers>
                                <EventTrigger RoutedEvent="Button.Click">
                                    <BeginStoryboard Storyboard="{StaticResource MinusAnimation}" />
                                </EventTrigger>
                            </Button.Triggers>
                        </Button>
                        <Button Grid.Row="1" Grid.RowSpan="3" Command="{x:Static internalCommands:OversizedNumberSpinnerCommands.EditValueCommand}">
                            <Button.Style>
                                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MaterialDesignOverSizedNumberSpinnerValueButton}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsEditing}" Value="False">
                                            <Setter Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsEditing}" Value="True">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                            <TextBlock x:Name="ValueTextBlock" FontSize="20" Foreground="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Foreground}"
                                       HorizontalAlignment="Center" Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Value}" VerticalAlignment="Center" />
                        </Button>
                        <Border Grid.Row="1" Grid.RowSpan="3" Background="White" CornerRadius="2" Margin="4,0,4,0" Padding="4,2,4,2" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsEditing}" Value="False">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsEditing}" Value="True">
                                            <Setter Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <TextBox x:Name="ValueTextBox" Foreground="Black" MinWidth="10" HorizontalAlignment="Stretch" VerticalAlignment="Center"
                                    Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Value, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" />
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>